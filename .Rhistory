swirl()
library("swirl")
swirl()
Sys.Date()
mean(c(2,4,5))
x
boring_function(3)
source('/var/folders/pl/_s8hp27x5fld6_yttgv9qqlr0000gn/T//RtmpU1JvV8/boring_function.R')
boring_function(3)
source('/var/folders/pl/_s8hp27x5fld6_yttgv9qqlr0000gn/T//RtmpU1JvV8/boring_function.R')
source('/var/folders/pl/_s8hp27x5fld6_yttgv9qqlr0000gn/T//RtmpU1JvV8/boring_function.R')
source('/var/folders/pl/_s8hp27x5fld6_yttgv9qqlr0000gn/T//RtmpU1JvV8/boring_function.R')
source('/var/folders/pl/_s8hp27x5fld6_yttgv9qqlr0000gn/T//RtmpU1JvV8/boring_function.R')
source('/var/folders/pl/_s8hp27x5fld6_yttgv9qqlr0000gn/T//RtmpU1JvV8/boring_function.R')
source('/var/folders/pl/_s8hp27x5fld6_yttgv9qqlr0000gn/T//RtmpU1JvV8/boring_function.R')
source('/var/folders/pl/_s8hp27x5fld6_yttgv9qqlr0000gn/T//RtmpU1JvV8/boring_function.R')
source('/var/folders/pl/_s8hp27x5fld6_yttgv9qqlr0000gn/T//RtmpU1JvV8/boring_function.R')
source('/var/folders/pl/_s8hp27x5fld6_yttgv9qqlr0000gn/T//RtmpU1JvV8/boring_function.R')
source('/var/folders/pl/_s8hp27x5fld6_yttgv9qqlr0000gn/T//RtmpU1JvV8/boring_function.R')
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(3)
remainder(35
)
remainder(5)
remainder(11, 5)
remainder(num = 11, divisor = 5)
remainder(divisor = 5, num = 11)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
ars(remainder)
args(remainder)
submit()
submit()
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x+1}, c(8, 4, 0))
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("ok")
submit()
submit()
mad_libs("Your mom's ass", "gigantic", "willie")
submit()
"I" %p% "love" %p% "R"
"I" %p% "love" %p% "R!"
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
d1$weekday
weekdays(d1)
months(d1)
months(t1)
quarters(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
t1 - Sys.time()
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
x <- 1:10
if(x > 5) {
x <- 0
}
?cbind
cbind(c(1,2), c(3,4))
getwd()
source('~/Desktop/Projects/Coursera/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(matrix(c(1,2), c(2,3)))
source('~/Desktop/Projects/Coursera/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(matrix(c(1,2), c(2,3)))
obj <- makeCacheMatrix(matrix(c(1,2), c(2,3)))
cacheSolve(obj)
matrix(c(1,2), c(3,4))
matrix(c(1,2), c(1,2))
matrix(c(2,2), c(1,2))
matrix(c(2,2), c(2,2))
matrix(c(1:4), 2)
obj <- makeCacheMatrix(matrix(c(1:4), 2))
cacheSolve(obj)
source('~/Desktop/Projects/Coursera/ProgrammingAssignment2/cachematrix.R')
library('swirl')
swirl()
ls()
class(plants)
dom(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
inside.names(plants)
names(plants)
head(plants)
head(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <- sample(0:1, 100, prob = c(0.3, 0.7), replace = TRUE)
flips <- sample(c(0,1), 100, prob = c(0.3, 0.7), replace = TRUE)
flips
sum(flips)
?rbinom
rbinom(1, size=100, prob=0.7)
f
rbinom(1, size=100, prob=0.7)
flips2 <- rbinom(n=100, size=1, prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean=100, sd=25)
?rpois
rpois(5, 10)
replicate(100, rpois(5,10))
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
data(cars)
data(cars)
help(cars)
head(cars)
plot(cars)
?ploat
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, xalb="Speed", ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(cars, main = "My Plot")
plot(cars, main = "My Plot", sub = "My Plot Subtitle")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10,15))
plot(cars, pch = 2)
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubricate)
library(lubridate)
help(package = lubridate)
this_day = today()
this_day <- today()
this_day
day(this_day)
wday(this_day)
wday(this_day, label= TRUE)
now()
this_moment <- now()
this_moment
hours(this_moment)
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("192012--")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = hour(now()), minutes = minute(now()))
this_moment
?now
nyc <- now(tz = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- (last_time, arrive)
how_long <- (last_time, end = arrive)
how_long <- interval(last_time, arrive)
as.period(how_ling)
as.period(how_long)
stopwatch()
setwd("./Desktop")
data <- read.csv("q1.csv")
names(data)
strsplit(names(data))[123]
strsplit(names(data), "wgtp")[123]
data <- read.csv("q1.csv")
data <- read.csv("q2.csv")
names(data)
data$Gross.domestic.product.2012
sub(",", "", data$Gross.domestic.product.2012)
sub(",", as.numeric(""), data$Gross.domestic.product.2012)
sub(",", "", data$Gross.domestic.product.2012)
mean(sub(",", "", data$Gross.domestic.product.2012))
mean(as.numeric(sub(",", "", data$Gross.domestic.product.2012)))
gdp <- data$Gross.domestic.product.2012[!is.na(data$Gross.domestic.product.2012)]
gdp
srt(gdp)
str(gdp)
data <- read.csv2("q2.csv")
data
data$X.Gross.domestic.product.2012........
data <- read.csv("q2.csv", header = TRUE)
data
data <- read.csv("q2.csv", header = TRUE, skip = 3)
data
data$US.dollars.
mean(data$US.dollars.)
data <- read.csv("q2.csv", header = TRUE, skip = 5)
data
data <- read.csv("q2.csv", header = TRUE, skip = 4)
data
data <- read.csv("q2.csv", header = TRUE, skip = 3)
data
head(data)
gdp <- data$US.dollars.[!is.na(data$US.dollars.)]
gdp
tail(data)
tail(data, 25)
tail(data, 35)
tail(data, 50)
tail(data, 90)
tail(data, 200)
tail(data, 100)
data <- data[1:232]
data <- data[1:232,]
data
tail(data)
mean(data$US.dollars.)
mean(as.numeric(sub(",", "", data$US.dollars.)))
as.numeric(sub(",", "", data$US.dollars.))
gdp <- as.numeric(sub(",", "", data$US.dollars.))
gpp <- gdp[!is.na(gdp)]
gdp
gdp <- gdp[!is.na(gdp)]
gdp
mean(gdp)
gdp <- as.numeric(gsub(",", "", data$US.dollars.))
gdp <- gdp[!is.na(gdp)]
gdp
mean(gdp)
data
tail(data)
data <- data[1:190,]
gdp <- as.numeric(gsub(",", "", data$US.dollars.))
gdp <- gdp[!is.na(gdp)]
gdp
mean(gdp)
tail(data)
data <- data[1:191,]
gdp <- as.numeric(gsub(",", "", data$US.dollars.))
gdp <- gdp[!is.na(gdp)]
mean(gdp)
data$Economy
grep("^United", data$Economy)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f)
dtGDP <- data.table(read.csv(f, skip = 4, nrows = 215, stringsAsFactors = FALSE))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP",
"Long.Name", "gdp"))
packages <- c("data.table", "quantmod")
sapply(packages, require, character.only = TRUE, quietly = TRUE)
install.packages(quantmod)
install.packages("quantmod")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f)
dtGDP <- data.table(read.csv(f, skip = 4, nrows = 215, stringsAsFactors = FALSE))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP",
"Long.Name", "gdp"))
dtGDP
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
download.file(url, f)
dtEd <- data.table(read.csv(f))
dt <- merge(dtGDP, dtEd, all = TRUE, by = c("CountryCode"))
dt
head(dt)
isFiscalYearEnd <- grepl("fiscal year end", tolower(dt$Special.Notes))
isFiscalYearEnd
isJune <- grepl("june", tolower(dt$Special.Notes))
table(isFiscalYearEnd, isJune)
dt[isFiscalYearEnd & isJune, Special.Notes]
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
year(sampleTimes)
sampleTimes[year(sampleTimes) = 2012]
sampleTimes[year(sampleTimes) == 2012]
2012Times<- sampleTimes[year(sampleTimes) == 2012]
data <- sampleTimes[year(sampleTimes) == 2012]
data[]
mday("2012-01-03")
data[mday(data) == 2]
data[mday(data) == 1]
data[mday(data) == 3]
data[mday(data) == 4]
data[mday(data) == 5]
data[mday(data) == 6]
data[mday(data) == 7]
data[wday(data) == 2]
setwd("./Projects/Coursera/R_programming/datasciencecoursera/getting_and_cleaning_data_assignment/")
data <- read.csv("data/test/X_test.txt")
data
str(data)
names(data)
data <- readLines("data/test/X_test.txt")
data
str(data)
data[3]
data[420]
data <- trimws(data)
data[1]
dt <- as.numeric(strsplit(data))
dt <- as.numeric(strsplit(data), " ")
dt <- sapply(strsplit(data, " "))
dt <- sapply(data, function(string) strsplit(string, " "))
dt[1]
dt <- sapply(data, function(string) as.numeric(strsplit(string, " ")))
dt <- sapply(data, function(string) strsplit(string, " "))
as.numeric(dt)
split_to_numeriic(string) <- {
as.numeric(strsplit(string, " "))
}
split_to_numeric <- function(string) {
as.numeric(strsplit(string, " "))
}
dt <- sapply(data, split_to_numeric)
str(dt[1])
unlist
unlist(data[1])
unlist(dt[1])
head(dt)
